<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operating System on Kenta Arai Webpage</title><link>https://Kenta11.github.io/tags/operating-system/</link><description>Recent content in Operating System on Kenta Arai Webpage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 Feb 2023 22:52:52 +0900</lastBuildDate><atom:link href="https://Kenta11.github.io/tags/operating-system/index.xml" rel="self" type="application/rss+xml"/><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #3</title><link>https://Kenta11.github.io/posts/2023-02-01-rust-raspberrypi-os-tutorials/</link><pubDate>Wed, 01 Feb 2023 22:52:52 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-02-01-rust-raspberrypi-os-tutorials/</guid><description>はじめに 前回の続きから． 03_hacky_hello_world QEMU がエミュレートする UART を介して，println! マクロで文字列を表示できるようにする console::console 関数は core::fmt::Write トレイトを実装した構</description></item><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #2</title><link>https://Kenta11.github.io/posts/2023-01-31-rust-raspberrypi-os-tutorials/</link><pubDate>Tue, 31 Jan 2023 22:17:41 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-01-31-rust-raspberrypi-os-tutorials/</guid><description>はじめに 前回の続きから． 02_runtime_init _start で主記憶の初期化を行う 初期化後に _start_rust（src/_arch/aarch64/cpu/boot.r</description></item><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #1</title><link>https://Kenta11.github.io/posts/2023-01-30-rust-raspberrypi-os-tutorials/</link><pubDate>Mon, 30 Jan 2023 22:30:15 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-01-30-rust-raspberrypi-os-tutorials/</guid><description>はじめに Rust で Raspberry Pi 向けのオペレーティングシステムを開発するチュートリアルが公開されている． 早速やってみよう． 00_before_we_start プロセッサ・アーキテクチャ固有の</description></item></channel></rss>