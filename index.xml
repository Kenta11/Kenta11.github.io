<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kenta Arai Webpage</title><link>https://Kenta11.github.io/</link><description>Recent content on Kenta Arai Webpage</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 28 Apr 2023 21:30:00 +0900</lastBuildDate><atom:link href="https://Kenta11.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Vitis HLS on Ubuntu on Manjaro</title><link>https://Kenta11.github.io/posts/2023-04-27-vitis_hls-on-ubuntu-on-manjaro/</link><pubDate>Fri, 28 Apr 2023 21:30:00 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-04-27-vitis_hls-on-ubuntu-on-manjaro/</guid><description>&lt;h2 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;p>Manjaro で Vitis HLS の&lt;a href="https://github.com/Kenta11/Vitis-HLS-Introductory-Examples">サンプルプログラム&lt;/a>を試したところ，CSIM ができなかった．
サポートされていない Manjaro で試行錯誤するのも時間の浪費なので，Docker で Ubuntu コンテナを動かし，そこで Vitis HLS を試してみることにする．&lt;/p></description></item><item><title>情報工学実験II（再々履修）</title><link>https://Kenta11.github.io/posts/2023-03-18-micro-alpha/</link><pubDate>Sat, 18 Mar 2023 19:00:00 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-03-18-micro-alpha/</guid><description>&lt;h2 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;p>MICRO-1 の FPGA 実装をしました．
最近 SystemVerilog を書き始めたことと，HDL 開発におけるテスト手法を調べたことで，何か成果を作りたくなったためです．&lt;/p></description></item><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #5</title><link>https://Kenta11.github.io/posts/2023-02-13-rust-raspberrypi-os-tutorials/</link><pubDate>Mon, 13 Feb 2023 23:00:00 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-02-13-rust-raspberrypi-os-tutorials/</guid><description>&lt;h1 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;p>&lt;a href="../2023-02-02-rust-raspberrypi-os-tutorials">前回&lt;/a>の続きから．&lt;/p>
&lt;h1 id="05_">&lt;a href="https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials/tree/master/05_drivers_gpio_uart">05_drivers_gpio_uart&lt;/a>&lt;a href="#05_" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;h2 id="概要">概要&lt;a href="#%e6%a6%82%e8%a6%81" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>UART と GPIO のコントローラ用ドライバを追加する
&lt;ul>
&lt;li>これまでに作成した QEMU コンソールを捨てて， &lt;code>ドライバマネージャ&lt;/code> を導入する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="ドライバマネージャ">ドライバマネージャ&lt;a href="#%e3%83%89%e3%83%a9%e3%82%a4%e3%83%90%e3%83%9e%e3%83%8d%e3%83%bc%e3%82%b8%e3%83%a3" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;code>ドライバサブシステム&lt;/code> をカーネルに追加&lt;/p></description></item><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #4</title><link>https://Kenta11.github.io/posts/2023-02-02-rust-raspberrypi-os-tutorials/</link><pubDate>Thu, 02 Feb 2023 21:00:00 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-02-02-rust-raspberrypi-os-tutorials/</guid><description>&lt;h1 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;p>&lt;a href="../2023-02-01-rust-raspberrypi-os-tutorials">前回&lt;/a>の続きから．&lt;/p>
&lt;h1 id="04_">&lt;a href="https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials/tree/master/04_safe_globals">04_safe_globals&lt;/a>&lt;a href="#04_" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;h2 id="概要">概要&lt;a href="#%e6%a6%82%e8%a6%81" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>疑似ロックを導入する話&lt;/p></description></item><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #3</title><link>https://Kenta11.github.io/posts/2023-02-01-rust-raspberrypi-os-tutorials/</link><pubDate>Wed, 01 Feb 2023 22:52:52 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-02-01-rust-raspberrypi-os-tutorials/</guid><description>&lt;h1 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;p>&lt;a href="../2023-01-31-rust-raspberrypi-os-tutorials">前回&lt;/a>の続きから．&lt;/p>
&lt;h1 id="03_">&lt;a href="https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials/tree/master/03_hacky_hello_world">03_hacky_hello_world&lt;/a>&lt;a href="#03_" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>QEMU がエミュレートする UART を介して，&lt;code>println!&lt;/code> マクロで文字列を表示できるようにする
&lt;ul>
&lt;li>&lt;code>console::console&lt;/code> 関数は &lt;code>core::fmt::Write&lt;/code> トレイトを実装した構造体を返す (&lt;code>src/bsp/raspberrypi.rs&lt;/code>)
&lt;ul>
&lt;li>このトレイトは &lt;code>write_str&lt;/code>, &lt;code>write_char&lt;/code>, &lt;code>write_fmt&lt;/code> 関数をもつ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>write_str&lt;/code> 関数は UART（アドレスが0x3F201000）に一文字ずつ書き込む (&lt;code>src/console.rs&lt;/code>)&lt;/li>
&lt;li>&lt;code>print!&lt;/code> と &lt;code>println!&lt;/code> はそれぞれ &lt;code>write_fmt&lt;/code> 関数を呼び出す（&lt;code>src/print.rs&lt;/code>）
&lt;ul>
&lt;li>&lt;code>write_str&lt;/code> を実装すると &lt;code>write_fmt&lt;/code> も自動的に実装されるのか？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="実行結果">実行結果&lt;a href="#%e5%ae%9f%e8%a1%8c%e7%b5%90%e6%9e%9c" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compiling kernel ELF - rpi3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compiling tock-registers v0.8.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compiling mingo v0.3.0 &lt;span class="o">(&lt;/span>/home/kenta/Git/Kenta11/rust-raspberrypi-OS-tutorials/03_hacky_hello_world&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compiling aarch64-cpu v9.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Finished release &lt;span class="o">[&lt;/span>optimized&lt;span class="o">]&lt;/span> target&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> in 3.88s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Generating stripped binary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Name kernel8.img
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size &lt;span class="m">6&lt;/span> KiB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ make &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Boot &lt;span class="nb">test&lt;/span> - rpi3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker: Got permission denied &lt;span class="k">while&lt;/span> trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post &lt;span class="s2">&amp;#34;http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create&amp;#34;&lt;/span>: dial unix /var/run/docker.sock: connect: permission denied.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">See &lt;span class="s1">&amp;#39;docker run --help&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make: *** &lt;span class="o">[&lt;/span>Makefile:216: test_boot&lt;span class="o">]&lt;/span> エラー &lt;span class="m">126&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo make &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>sudo&lt;span class="o">]&lt;/span> kenta のパスワード:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Boot &lt;span class="nb">test&lt;/span> - rpi3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 🦀 Running &lt;span class="m">1&lt;/span> console I/O tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. Checking &lt;span class="k">for&lt;/span> the string: &lt;span class="s1">&amp;#39;Stopping here&amp;#39;&lt;/span>..................&lt;span class="o">[&lt;/span>ok&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console log:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Hello from Rust!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Kernel panic!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Panic location:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s1">&amp;#39;src/main.rs&amp;#39;&lt;/span>, line 129, column &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Stopping here
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ✅ Success: Boot &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo make qemu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Launching QEMU
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello from Rust!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Kernel panic!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Panic location:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File &lt;span class="s1">&amp;#39;src/main.rs&amp;#39;&lt;/span>, line 129, column &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Stopping here.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #2</title><link>https://Kenta11.github.io/posts/2023-01-31-rust-raspberrypi-os-tutorials/</link><pubDate>Tue, 31 Jan 2023 22:17:41 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-01-31-rust-raspberrypi-os-tutorials/</guid><description>&lt;h1 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;p>&lt;a href="../2023-01-30-rust-raspberrypi-os-tutorials">前回&lt;/a>の続きから．&lt;/p>
&lt;h1 id="02_">&lt;a href="https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials/tree/master/02_runtime_init">02_runtime_init&lt;/a>&lt;a href="#02_" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>&lt;code>_start&lt;/code> で主記憶の初期化を行う&lt;/li>
&lt;li>初期化後に &lt;code>_start_rust&lt;/code>（&lt;code>src/_arch/aarch64/cpu/boot.rs&lt;/code>）にエントリし，&lt;code>kernel_init&lt;/code>（&lt;code>src/main.rs&lt;/code>）を実行する&lt;/li>
&lt;/ul>
&lt;h2 id="セクションの構成">セクションの構成&lt;a href="#%e3%82%bb%e3%82%af%e3%82%b7%e3%83%a7%e3%83%b3%e3%81%ae%e6%a7%8b%e6%88%90" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>DRAM の先頭アドレスは 0x80000&lt;/p></description></item><item><title>Operating System development tutorials in Rust on the Raspberry Pi をする #1</title><link>https://Kenta11.github.io/posts/2023-01-30-rust-raspberrypi-os-tutorials/</link><pubDate>Mon, 30 Jan 2023 22:30:15 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-01-30-rust-raspberrypi-os-tutorials/</guid><description>&lt;h1 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;p>Rust で Raspberry Pi 向けのオペレーティングシステムを開発する&lt;a href="https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials">チュートリアル&lt;/a>が公開されている．
早速やってみよう．&lt;/p></description></item><item><title>Projects</title><link>https://Kenta11.github.io/projects/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0900</pubDate><guid>https://Kenta11.github.io/projects/</guid><description>&lt;h1 id="参加中のプロジェクトa-project-i-am-participating-in">参加中のプロジェクト/A project I am participating in&lt;a href="#%e5%8f%82%e5%8a%a0%e4%b8%ad%e3%81%ae%e3%83%97%e3%83%ad%e3%82%b8%e3%82%a7%e3%82%af%e3%83%88a-project-i-am-participating-in" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://gitlab.com/OldManProgrammer/unix-tree">The tree command&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="参加したプロジェクトa-project-i-participated-in">参加したプロジェクト/A Project I participated in&lt;a href="#%e5%8f%82%e5%8a%a0%e3%81%97%e3%81%9f%e3%83%97%e3%83%ad%e3%82%b8%e3%82%a7%e3%82%af%e3%83%88a-project-i-participated-in" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h1>
&lt;h2 id="the-rust-programming-language-読書会the-rust-programming-language-reading">The Rust Programming Language 読書会/The Rust Programming Language Reading&lt;a href="#the-rust-programming-language-%e8%aa%ad%e6%9b%b8%e4%bc%9athe-rust-programming-language-reading" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>#1 : &lt;a href="https://kenta11.github.io/slides/20210716-reading-trpl-public">https://kenta11.github.io/slides/20210716-reading-trpl-public&lt;/a>&lt;/li>
&lt;li>#3 : &lt;a href="https://kenta11.github.io/slides/20210820-reading-trpl-public">https://kenta11.github.io/slides/20210820-reading-trpl-public&lt;/a>&lt;/li>
&lt;li>#6 : &lt;a href="https://kenta11.github.io/slides/20211001-reading-trpl-public">https://kenta11.github.io/slides/20211001-reading-trpl-public&lt;/a>&lt;/li>
&lt;li>#8 : &lt;a href="https://kenta11.github.io/slides/20211029-reading-trpl-public">https://kenta11.github.io/slides/20211029-reading-trpl-public&lt;/a>&lt;/li>
&lt;li>#10 : &lt;a href="https://kenta11.github.io/slides/20211126-reading-trpl-public">https://kenta11.github.io/slides/20211126-reading-trpl-public&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Electron-Shogi &amp; 水匠5 on Manjaro</title><link>https://Kenta11.github.io/posts/2023-01-01-shogi-on-manjaro/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0900</pubDate><guid>https://Kenta11.github.io/posts/2023-01-01-shogi-on-manjaro/</guid><description>&lt;h2 id="はじめに">はじめに&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab" class="anchor" aria-hidden="true">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
 stroke-linecap="round" stroke-linejoin="round">
 &lt;path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3">&lt;/path>
 &lt;line x1="8" y1="12" x2="16" y2="12">&lt;/line>
 &lt;/svg>&lt;/a>&lt;/h2>
&lt;p>うちには強いマシンが Manjaro サーバしかないので，将棋の解析をこのサーバでやりたい．
ただし，いわゆる将棋ソフトは Windows で使うことを前提としているので，Manjaro なんていう変な環境でトライした人はいなさそうだ．
突貫工事ではあるが，Manjaro のデスクトップ環境で将棋の解析ができる環境を作ったので，その手順を記録しておく．&lt;/p></description></item><item><title>これまでに観た古典芸能の演目</title><link>https://Kenta11.github.io/posts/2022-12-19-classic-engei/</link><pubDate>Mon, 19 Dec 2022 22:00:00 +0900</pubDate><guid>https://Kenta11.github.io/posts/2022-12-19-classic-engei/</guid><description>&lt;p>これまでに何度か古典芸能を観る機会があって，面白いなと思うことが増えてきた．
そこで，これまでに観た演目を記録しておく．
実際に劇場等で観たものは少ないので，テレビ や YouTube で観たものも含めて記載する．&lt;/p></description></item></channel></rss>